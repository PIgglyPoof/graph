#include <stdio.h>
#include <stdlib.h>
int matrix[101][101];
int check[101];
int stk[101];
int que[101];
int front = 0, rear = 0;
int top = 0;
void insert(int v) {
	stk[top] = v;
	++top;
}
int pop() {
	--top;
	return stk[top];
}

void insertQ(int v) {
	que[rear] = v;
	++rear;
}

int popQ() {
	++front;
	return que[front - 1];
}

void DFS() {
	printf("DPS : ");
	int i,v;
	while (top != 0) {
		v = pop();
		printf("%d ", v);
		for (i = 0; i < 101; ++i) {
			if (matrix[v][i] == 1 && check[i] == 1) {
				check[i] = 2;
				insert(i);
			}
		}
	}
	printf("\n");
}

void BFS() {
	printf("BPS : ");
	int i, v;
	while (front!=rear) {
		v = popQ();
		printf("%d ", v);
		for (i = 0; i < 101; ++i) {
			if (matrix[v][i] == 1 && check[i] == 1) {
				check[i] = 2;
				insertQ(i);
			}
		}
	}
	printf("\n");
}


int main()
{
	int n,i,x,y;
	printf("Enter no of edges in graph");
	scanf("%d", &n);
	printf("Enter pair of vertices with edges in between (vertices<=100):");
	for (i = 0; i < n; ++i) {
		scanf("%d%d", &x, &y);
		matrix[x][y] = 1;
		matrix[y][x] = 1;
		check[x] = check[y] = 1;
	}
	for (i = 0; i < 101; ++i) {
		if (check[i] == 1) {
			check[i] = 2;
			insert(i);
			DFS();
		}
	}
	for (i = 0; i < 101; ++i) {
		if (check[i] != 0) {
			check[i] = 1;
		}
	}
	for (i = 0; i < 101; ++i) {
		if (check[i] == 1) {
			check[i] = 2;
			insertQ(i);
			BFS();
		}
	}
	return 0;
}
